<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/bootstrap.min.css">
    <title>FILE SHARING</title>
    <style>
        body {
            font-family: "Roboto", sans-serif;
            background-color: #f1f1f1;
            margin: 0;
            padding: 0;
        }

        #messagesTable tbody tr {
            cursor: pointer;
        }
    </style>

</head>

<body>
    <!-- Navbar -->
    {{>navbaradmin}}
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-10 col-12 mx-auto">
                <h2>All Messages</h2>
                <table id="messagesTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th>Sender</th>
                            <th>Receivers</th>
                            <th>Subject</th>
                            <th>Attachments</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Message data will be dynamically inserted here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Message Modal -->
    <div class="modal" id="messageModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body"></div>
            </div>
        </div>
    </div>

    <script src="../jq/jquery.js" type="text/javascript"></script>
    <script>
        // Function to fetch all messages from the server and populate the table
        function fetchMessages() {
            // Get the access token from the cookie
            var accessToken = document.cookie.replace(/(?:(?:^|.*;\s*)accessToken\s*=\s*([^;]*).*$)|^.*$/, "$1");

            // Send a GET request to retrieve all messages
            fetch('/api/messages/allMessages', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + accessToken // Replace with the actual access token
                    }
                })
                .then(response => response.json())
                .then(messages => {
                    // Sort messages by date in descending order
                    messages.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));

                    // Clear the table body
                    const tableBody = document.querySelector('#messagesTable tbody');
                    tableBody.innerHTML = '';

                    // Populate the table with message data
                    messages.forEach(message => {
                        const row = document.createElement('tr');
                        const receivers = message.receivers.join(', ');
                        const attachments = message.attachments.map(attachment => `<a href="${attachment.downloadLink}" target="_blank">${attachment.filename}</a>`).join('<br>');

                        row.innerHTML = `
                            <td>${message.sender}</td>
                            <td>${receivers}</td>
                            <td>${message.subject}</td>
                            <td>${attachments}</td>
                            <td>${new Date(message.createdAt).toLocaleString()}</td>
                        `;

                        row.addEventListener('click', () => {
                            openMessageWindow(message);
                        });

                        tableBody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error(error);
                    alert('Failed to fetch messages.');
                });
        }

        // Function to open the message in a modal
        function openMessageWindow(message) {
            const modal = document.getElementById('messageModal');
            const modalTitle = modal.querySelector('.modal-title');
            const modalBody = modal.querySelector('.modal-body');

            // Populate the modal with message data
            modalTitle.innerText = message.subject;
            modalBody.innerHTML = `
                <p><strong>Sender:</strong> ${message.sender}</p>
                <p><strong>Receivers:</strong> ${message.receivers.join(', ')}</p>
                <p><strong>Date:</strong> ${new Date(message.createdAt).toLocaleString()}</p> 
                <p><strong>Body:</strong></p>
                <p>${message.body}</p>
                <p><strong>Attachments:</strong></p>
                <ul>
                    ${message.attachments.map(attachment => `<li><a href="${attachment.downloadLink}" target="_blank">${attachment.filename}</a></li>`).join('')}
                </ul>
               
            `;

            // Show the modal
            modal.classList.add('show');
            modal.style.display = 'block';
        }

        // Call the fetchMessages function when the page is loaded
        document.addEventListener('DOMContentLoaded', function () {
            fetchMessages();

            // Attach click event listener to table rows
            const tableBody = document.querySelector('#messagesTable tbody');
            tableBody.addEventListener('click', function (event) {
                const row = event.target.closest('tr');
                if (row) {
                    const rowIndex = Array.from(tableBody.children).indexOf(row);
                    const messages = Array.from(tableBody.children);
                    const message = messages[rowIndex].__data__;
                    openMessageWindow(message);
                }
            });

            // Attach click event listener to close button of the modal
            const closeButton = document.querySelector('.modal [data-dismiss="modal"]');
            closeButton.addEventListener('click', function () {
                const modal = document.getElementById('messageModal');
                modal.classList.remove('show');
                modal.style.display = 'none';
            });
        });
    </script>

</body>

</html>
