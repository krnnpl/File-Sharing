<!DOCTYPE html>
<html>

<head>
  <title>Compose Message</title>
  <link rel="stylesheet" href="../css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

  <style>
    body {
      font-family: "Roboto", sans-serif;
      background-color: #f1f1f1;
      margin: 0;
      padding: 0;
      overflow: hidden; /* Prevent page from being movable */
    }

    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    .form-container {
      width: 600px;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 170px;
      margin-top: 100px;
    }

    .form-container label {
      display: block;
      margin-bottom: 10px;
      font-weight: bold;
    }

    .form-container input[type="text"],
    .form-container textarea {
      width: 100%;
      padding: 10px;
      border-radius: 5px;
      border: 1px solid #ccc;
      resize: none;
    }

    /* Flex container for the "Add Files" and "Send" buttons */
    .button-container {
      display: flex;
      align-items: center;
    }

    .file-input-container {
    flex-grow: 1;
    max-height: 100px;
    overflow-y: auto;
    
  }

    .file-input-container label {
      cursor: pointer;
      background-color: #007bff; /* Customize the background color */
      color: #ffffff; /* Customize the text color */
      padding: 8px 12px; /* Adjust the padding for a more compact button */
      border-radius: 5px; /* Add border-radius to create rounded corners */
      transition: background-color 0.3s ease;
      display: flex;
      align-items: center; /* Center the content vertically */
      width: 125px;
    }

    .file-input-container label i {
      margin-right: 5px; /* Add some spacing between the icon and the text */
    }

    .file-input-container label:hover {
      background-color: #0056b3; /* Change the background color on hover */
    }

    .file-input-container input[type="file"] {
      display: none;
    }

    .selected-files-list {
      max-height: 120px;
      overflow-y: auto;
      margin-top: 10px;
      padding-left: 25px;
      list-style: none;
    }

    .selected-files-list li {
      margin-bottom: 5px;
    }

    .submit-button {
      margin-left: 10px; /* Add some spacing between the "Add Files" and "Send" buttons */
      background-color: #4caf50;
      color: #ffffff;
      border: none;
      padding: 10px;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      width: 100px;
      text-align: center;
      margin: 0px 0px 0px;
    }

    .submit-button:hover {
      background-color: #45a049;
    }

    .h1,
    h1 {
      font-size: calc(1rem + 1vw);
    }
  </style>
</head>

<body>
  {{>navbar}}
  <div class="container">
    <div class="form-container">
      <form id="compose-form" enctype="multipart/form-data">
        <label for="receiver">To:</label>
        <textarea id="receiver" name="receivers" required>{{receivers}}</textarea>
        <label for="subject">Subject:</label>
        <input type="text" id="subject" name="subject" required value="{{subject}}">
        <label for="message">Message:</label>
        <textarea id="message" name="body" required>{{body}}</textarea>
        <label for="files">Files:</label>
        <div class="button-container">
          <!-- Custom icon for file input -->
          <div class="file-input-container">
            <label for="file-input" style="cursor: pointer;">
              <i class="fas fa-upload"></i> Add Files
            </label>
            <input type="file" id="file-input" name="attachments" multiple style="display: none;">
          </div>
          <button type="submit" class="submit-button"><i class="fas fa-paper-plane"></i> Send</button>
        </div>
        <ul class="selected-files-list" id="selected-files-list"></ul>
      </form>
    </div>
  </div>
  <script src="../jq/jquery.js" type="text/javascript"></script>
  <script src="../js/bootstrap.js" type="text/javascript"></script>
  <script>
    // Store the previously selected files
    let selectedFiles = [];

    // Function to handle file selection
    function handleFileSelect(event) {
      const filesInput = document.getElementById('file-input');
      const newFiles = Array.from(filesInput.files);

      // Combine previously selected files and newly selected files
      selectedFiles = selectedFiles.concat(newFiles);

      // Display all selected files
      const selectedFilesList = document.getElementById('selected-files-list');
      selectedFilesList.innerHTML = '';
      selectedFiles.forEach(file => {
        const listItem = document.createElement('li');
        listItem.textContent = file.name;
        selectedFilesList.appendChild(listItem);
      });
    }

    // Attach event listener to the file input's change event
    const filesInput = document.getElementById('file-input');
    filesInput.addEventListener('change', handleFileSelect);

    // Function to handle form submission
    function submitForm(event) {
      event.preventDefault();

      const form = event.target;
      const receivers = form.receivers.value;
      const subject = form.subject.value;
      const body = form.body.value;

      const formData = new FormData();
      formData.append('receivers', receivers);
      formData.append('subject', subject);
      formData.append('body', body);

      // Append all selected files
      selectedFiles.forEach(file => {
        formData.append('attachments', file);
      });

      fetch('http://localhost:3000/api/messages/compose', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          console.log('Message created successfully:', data);
          if (data.message) {
            alert('Message sent successfully');
            form.reset();
            selectedFiles = []; // Reset the selected files
            const selectedFilesList = document.getElementById('selected-files-list');
            selectedFilesList.innerHTML = ''; // Clear the selected files
            window.location.href = 'http://localhost:3000/sent';
          } else {
            alert('Failed to send message');
          }
        })
        .catch(error => {
          console.error('Failed to create message:', error);
          alert('Failed to send message');
        });
    }

    // Attach event listener to the form's submit event
    const form = document.getElementById('compose-form');
    form.addEventListener('submit', submitForm);
  </script>
</body>

</html>
