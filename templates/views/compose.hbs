<!DOCTYPE html>
<html>

<head>
    <title>Compose Message</title>
    <link rel="stylesheet" href="../css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

    <style>
        body {
            font-family: "Roboto", sans-serif;
            background-color: #f1f1f1;
            margin: 0;
            padding: 0;
        }


        .container {
            display: flex;
            justify-content: center;
            align-items: baseline;
            min-height: 100vh;
            position: fixed;
        }

        .form-container {
            width: 400px;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            position: center;
            overflow: auto;
        }

        .form-container label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }

        .form-container input[type="text"],
        .form-container textarea {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            resize: none;
        }

        .form-container button[type="submit"] {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
            background-color: #4caf50;
            color: #ffffff;
            border: none;
            padding: 10px;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            width: auto;
            position: relative;
            left: 310px;
        }

        .form-container button[type="submit"]:hover {
            background-color: #45a049;
        }
        .h1, h1 {
    font-size: calc(1rem + 1vw);
        }
    </style>
</head>

<body>
    {{>navbar}}
    <div class="container-fluid mt-2">
        <div class="row">
            <div class="col-md-10 col-12 mx-auto">

                <h1>Compose Message</h1>

                <div class="container">
                    <div class="form-container">
                        <form id="composeForm"   action="{{action}}" method="post" enctype="multipart/form-data">
                            <label for="receiver">To:</label>
                            <textarea id="receiver" name="receiver" required>{{receiver}}</textarea>
                            <label for="subject">Subject:</label>
                            <input type="text" id="subject" name="subject" required value="{{subject}}">

                            <label for="message">Message:</label>
                            <textarea id="message" name="message" required>{{message}}</textarea>

                            <label for="attachments">Files:</label>
                            <input type="file" id="files" name="attachments" multiple>

                            <button type="submit"><i class="fas fa-paper-plane"></i></button>
                        </form>
                    </div>
                </div>

                <script src="../jq/jquery.js" type="text/javascript"></script>
                <script src="../js/bootstrap.js" type="text/javascript"></script>

            </div>
        </div>
    </div>
    <script>
        // Get the form element from the HTML template
const form = document.querySelector('#composeForm');

// Add an event listener to the form submit event
form.addEventListener('submit', async (event) => {
  event.preventDefault(); // Prevent the default form submission

  // Get the form data
  const receiver = form.querySelector('#receiver').value;
  const subject = form.querySelector('#subject').value;
  const message = form.querySelector('#message').value;

  // Create a FormData object to send the form data with files
  const formData = new FormData(form);

  try {
    // Send the form data to the server using fetch API
    const response = await fetch('/api/messages/compose', {
      method: 'POST',
      body: formData,
    });

    // Check the response status
    if (response.ok) {
      const data = await response.json();
      console.log('Message created successfully:', data.message);
      // TODO: Add your desired logic after successful message creation
    } else {
      const errorData = await response.json();
      console.error('Failed to create message:', errorData.error);
      // TODO: Add your desired error handling logic
    }
  } catch (err) {
    console.error('Failed to create message:', err);
    // TODO: Add your desired error handling logic
  }
});

    </script>
</body>

</html>