<!DOCTYPE html>
<html>

<head>
  <title>Compose Message</title>
  <link rel="stylesheet" href="../css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

  <style>
    body {
      font-family: "Roboto", sans-serif;
      background-color: #f1f1f1;
      margin: 0;
      padding: 0;
    }

    .container {
      display: flex;
      justify-content: center;
      align-items: baseline;
      min-height: 100vh;
      position: fixed;
    }

    .form-container {
      width: 400px;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      position: center;
      overflow: auto;
    }

    .form-container label {
      display: block;
      margin-bottom: 10px;
      font-weight: bold;
    }

    .form-container input[type="text"],
    .form-container textarea {
      width: 100%;
      padding: 10px;
      border-radius: 5px;
      border: 1px solid #ccc;
      resize: none;
    }

    .form-container button[type="submit"] {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-top: 20px;
      background-color: #4caf50;
      color: #ffffff;
      border: none;
      padding: 10px;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      width: auto;
      position: relative;
      left: 310px;
    }

    .form-container button[type="submit"]:hover {
      background-color: #45a049;
    }

    .h1,
    h1 {
      font-size: calc(1rem + 1vw);
    }
  </style>
</head>

<body>
  {{>navbar}}
  <div class="container-fluid mt-2">
    <div class="row">
      <div class="col-md-10 col-12 mx-auto">
        <h1>Compose Message</h1>
        <div class="container">
          <div class="form-container">
            <form id="compose-form" enctype="multipart/form-data">
              <label for="receiver">To:</label>
              <textarea id="receiver" name="receivers" required>{{receivers}}</textarea>
              <label for="subject">Subject:</label>
              <input type="text" id="subject" name="subject" required value="{{subject}}">
              <label for="message">Message:</label>
              <textarea id="message" name="body" required>{{body}}</textarea>
              <label for="files">Files:</label>
              <input type="file" id="files" name="attachments" multiple>
              <ul id="selected-files-list"></ul>
              <button type="submit"><i class="fas fa-paper-plane"></i></button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script src="../jq/jquery.js" type="text/javascript"></script>
  <script src="../js/bootstrap.js" type="text/javascript"></script>
  <script>
 // Store the previously selected files
let selectedFiles = [];

// Function to handle file selection
function handleFileSelect(event) {
  const filesInput = document.getElementById('files');
  const newFiles = Array.from(filesInput.files);

  // Combine previously selected files and newly selected files
  selectedFiles = selectedFiles.concat(newFiles);

  // Display all selected files
  const selectedFilesList = document.getElementById('selected-files-list');
  selectedFilesList.innerHTML = '';
  selectedFiles.forEach(file => {
    const listItem = document.createElement('li');
    listItem.textContent = file.name;
    selectedFilesList.appendChild(listItem);
  });
}

// Attach event listener to the file input's change event
const filesInput = document.getElementById('files');
filesInput.addEventListener('change', handleFileSelect);

// Function to handle form submission
function submitForm(event) {
  event.preventDefault();

  const form = event.target;
  const receivers = form.receivers.value;
  const subject = form.subject.value;
  const body = form.body.value;

  const formData = new FormData();
  formData.append('receivers', receivers);
  formData.append('subject', subject);
  formData.append('body', body);

  // Append all selected files
  selectedFiles.forEach(file => {
    formData.append('attachments', file);
  });

  fetch('http://localhost:3000/api/messages/compose', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      console.log('Message created successfully:', data);
      if (data.message) {
        alert('Message sent successfully');
        form.reset();
        filesInput.value = ''; // Clear the file input field
        selectedFiles = []; // Reset the selected files
        const selectedFilesList = document.getElementById('selected-files-list');
        selectedFilesList.innerHTML = ''; // Clear the selected files list
        window.location.href = 'http://localhost:3000/sent';
      } else {
        alert('Failed to send message');
      }
    })
    .catch(error => {
      console.error('Failed to create message:', error);
      alert('Failed to send message');
    });
}

// Attach event listener to the form's submit event
const form = document.getElementById('compose-form');
form.addEventListener('submit', submitForm);

  </script>
</body>

</html>
