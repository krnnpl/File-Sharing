<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Navbar</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <style>
    body {
      font-family: "Roboto", sans-serif;
      background-color: #f1f1f1;
      margin: 0;
      padding: 0;
    }

    .bg-light {
      --bs-bg-opacity: 1;
      background-color: honeydew;
      border-radius: 15px;
    }

    .py-3 {
      padding-top: 1rem !important;
      padding-bottom: 1rem !important;
      background-color: cornflowerblue;
    }

    .navbar-nav .nav-link {
      position: relative;
      color: #000;
      text-decoration: none;
      padding: 10px;
      transition: background-color 0.3s ease;
    }

    .navbar-nav .nav-link:before {
      content: "";
      position: absolute;
      left: 0;
      bottom: -2px;
      width: 100%;
      height: 2px;
      background-color: transparent;
      transition: background-color 0.3s ease;
    }

    .navbar-nav .nav-link:hover:before {
      background-color: #000;
    }

    .search-container {
      float: right;
    }

    .search-container input[type=text] {
      padding: 6px;
      margin-top: 5px;
      font-size: 15px;
      border: solid 1px;
    }

    .search-container button {
      float: right;
      padding: 6px 10px;
      margin-top: 5px;
      background: #ddd;
      border: none;
      cursor: pointer;
    }

    .search-container button:hover {
      background: #ccc;
    }

    @media screen and (max-width: 600px) {
      .search-container {
        float: none;
      }

      .search-container input[type=text],
      .search-container button {
        float: none;
        display: block;
        text-align: left;
        width: 98%;
        margin: 0;
        padding: 14px;
      }

      .search-container input[type=text] {
        border: 1px solid #ccc;
      }
    }

    #logo {
      font-family: 'Quicksand';
      font-size: 25px;
    }
  </style>
</head>

<body>
  <div class="container-fluid navbar-style py-3">
    <div class="row">
      <div class="col-md-10 col-12 mx-auto">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
          <a class="navbar-brand" id="logo">Swifty Share</a>
          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent" style="padding-right: 30px;">
            <ul class="navbar-nav ms-auto">
              <li class="nav-item">
                <a class="nav-link" href="/inbox">Inbox <span class="sr-only"></span></a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/sent">Sent</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/compose">Compose</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/admin">Admin Panel</a>
              </li>
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                  Dashboard
                </a>
                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                  <li><a class="dropdown-item" href="/profile">Profile</a></li>
                  <li><a class="dropdown-item" href="/logout">Logout</a></li>
                </ul>
              </li>
            </ul>
            <div class="search-container">
              <form id="search-form">
                <input type="text" placeholder="Search.." name="query">
                <button type="submit"><i class="fa fa-search"></i></button>
              </form>
            </div>
          </div>
        </nav>
      </div>
    </div>
  </div>

  <div id="result-container" class = "container"></div>


 <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.2/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.2.1/js.cookie.min.js"></script>
<script>
  // Handle form submission
  $('#search-form').submit(function (event) {
    event.preventDefault(); // Prevent the form from submitting normally
    const query = $('input[name="query"]').val(); // Get the search query
    if (query) {
      // Get the access token from the cookie
      var accessToken = document.cookie.replace(/(?:(?:^|.*;\s*)accessToken\s*=\s*([^;]*).*$)|^.*$/, "$1");

      // Send an AJAX request to the search API endpoint
      $.ajax({
        url: '/api/search',
        type: 'GET',
        data: { query: query },
        headers: {
          'Authorization': 'Bearer ' + accessToken
        },
        success: function (response) {
          // Render the search results
          const resultContainer = document.getElementById('result-container');
          resultContainer.innerHTML = '';

          if (response.users && response.users.length) {
            const usersHeading = document.createElement('h2');
            usersHeading.textContent = 'User Search Results';
            resultContainer.appendChild(usersHeading);

            response.users.forEach(function (user) {
              const profileCard = document.createElement('div');
              profileCard.classList.add('card', 'my-3');
              profileCard.innerHTML = `
                <div class="card-body">
                  <h5 class="card-title">${user.username}</h5>
                  <p class="card-text">Branch: ${user.branch}</p>
                  <p class="card-text">Full Name: ${user.firstName} ${user.lastName}</p>
                  
                </div>
              `;

              resultContainer.appendChild(profileCard);
            });
          } else {
            const noUserResults = document.createElement('p');
            noUserResults.textContent = 'No users found.';
            resultContainer.appendChild(noUserResults);
          }

          // Render inbox search results
          if (response.inboxSearch && response.inboxSearch.length) {
            const inboxHeading = document.createElement('h2');
            inboxHeading.textContent = 'Inbox Search Results';
            resultContainer.appendChild(inboxHeading);

            const inboxTable = document.createElement('table');
            inboxTable.classList.add('table', 'table-striped');
            const inboxTableBody = document.createElement('tbody');

            response.inboxSearch.forEach(function (message) {
              const row = document.createElement('tr');
              const receivers = message.receivers.join(', ');
              const attachments = getAttachmentDetails(message.attachments);

              row.innerHTML = `
                <td>${new Date(message.createdAt).toLocaleString()}</td>
                <td>${message.sender}</td>
                <td>${receivers}</td>
                <td>${message.subject}</td>
                <td>${attachments}</td>
              `;

              row.addEventListener('click', () => {
                openMessageWindow(message);
              });

              inboxTableBody.appendChild(row);
            });

            inboxTable.appendChild(inboxTableBody);
            resultContainer.appendChild(inboxTable);
          } else {
            const noInboxMessages = document.createElement('p');
            noInboxMessages.textContent = 'No inbox messages found.';
            resultContainer.appendChild(noInboxMessages);
          }

          // Render outbox search results
          if (response.outboxSearch && response.outboxSearch.length) {
            const outboxHeading = document.createElement('h2');
            outboxHeading.textContent = 'Outbox Search Results';
            resultContainer.appendChild(outboxHeading);

            const outboxTable = document.createElement('table');
            outboxTable.classList.add('table', 'table-striped');
            const outboxTableBody = document.createElement('tbody');

            response.outboxSearch.forEach(function (message) {
              const row = document.createElement('tr');
              const receivers = message.receivers.join(', ');
              const attachments = getAttachmentDetails(message.attachments);

              row.innerHTML = `
                <td>${new Date(message.createdAt).toLocaleString()}</td>
                <td>${message.sender}</td>
                <td>${receivers}</td>
                <td>${message.subject}</td>
                <td>${attachments}</td>
              `;

              row.addEventListener('click', () => {
                openMessageWindow(message);
              });

              outboxTableBody.appendChild(row);
            });

            outboxTable.appendChild(outboxTableBody);
            resultContainer.appendChild(outboxTable);
          } else {
            const noOutboxMessages = document.createElement('p');
            noOutboxMessages.textContent = 'No outbox messages found.';
            resultContainer.appendChild(noOutboxMessages);
          }
        },
        error: function (error) {
          console.error(error);
        }
      });
    }
  });
</script>



</body>

</html>
